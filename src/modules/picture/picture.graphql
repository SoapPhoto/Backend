type Query {
  "获取单个图片"
  picture(
    id: ID!
  ): Picture

  "获取图片列表"
  pictures(
    "分页"
    page: Float
    "分页"
    pageSize: Float
    "时间戳"
    timestamp: Float
  ): Pictures

  "获取图片相关收藏夹"
  pictureRelatedCollection(
    id: ID!
  ): PictureRelatedCollectionReq

  "获取用户的图片"
  userPictures(
    "用户id"
    id: ID!
    "用户名"
    username: String
    "分页"
    page: Float
    "分页"
    pageSize: Float
    "时间戳"
    timestamp: Float
  ): Pictures
}

type Mutation {
  "喜欢图片"
  likePicture(
    id: ID!
  ): LikePictureReq
  "取消喜欢图片"
  unlikePicture(
    id: ID!
  ): LikePictureReq
  updatePicture(
    id: ID!
    data: UpdatePictureInput!
  ): Picture
  deletePicture(
    id: ID!
  ): Status
}

input UpdatePictureInput {
  title: String
  bio: String
  isPrivate: Boolean
  tags: [String]
}

type PictureRelatedCollectionReq implements BaseCountData {
  count: Float
  data: [Collection!]!
}

type LikePictureReq {
  count: Float
  isLike: Boolean
}

type Pictures implements BaseList {
  count: Float
  page: Float
  pageSize: Float
  timestamp: Float
  data: [Picture!]!
}

type EXIF {
  aperture: Float
  exposureTime: String
  focalLength: Float
  iso: Float
}

"""
图片
"""
type Picture implements BaseNode {
  "id"
  id: ID!

  "七牛的key"
  key: String

  "七牛的hash"
  hash: String

  "图片标题"
  title: String

  "图片介绍"
  bio: String

  "浏览次数"
  views: Float

  "图片原始文件名"
  originalname: String

  "图片类型"
  mimetype: String

  "图片大小"
  size: Float

  "当前登录用户是否喜欢"
  isLike: Boolean

  "picture喜欢的数量"
  likes: Float
  "图片的主色调"
  color: String

  "图片的颜色是明还是暗"
  isDark: Boolean

  "图片长度"
  height: Float

  "图片宽度"
  width: Float

  "设备品牌"
  make: String

  "设备型号"
  model: String

  "EXIF信息"
  exif: EXIF

  "图片作者"
  user: User

  "创建时间"
  createTime: DateTime

  "修改时间"
  updateTime: DateTime

  tags: [Tag]

  "是否是私人的"
  isPrivate: Boolean

  "当前用户收藏了此图片的收藏夹列表"
  currentCollections: [Collection]

  "当前用户收藏了此图片的收藏夹列表"
  relatedCollections(limit: Float): PictureRelatedCollectionReq
}
