enum UserPictureType {
  MY
  LIKED
}
enum UserSignupType {
  EMAIL
  GITHUB
  GOOGLE
  WEIBO
}
enum UserStatusType {
  UNVERIFIED
  VERIFIED
  SUSPENDED
  BANNED
}

type Query {
  "获取登录用户信息"
  whoami: User

  "获取单个用户信息"
  user(
    id: ID
    username: String
  ): User

  "获取用户的收藏夹列表"
  userCollectionsByName(
    username: String!
    query: CollectionsQueryInput
  ): Collections

  "获取用户的收藏夹列表"
  userCollectionsById(
    id: ID!
    query: CollectionsQueryInput!
  ): Collections

  userPicturesByName(
    "类型"
    type: UserPictureType = MY
    "用户名"
    username: String!
    query: PicturesQueryInput!
  ): Pictures
  userPicturesById(
    "类型"
    type: UserPictureType = MY
    "id"
    id: ID!
    query: PicturesQueryInput
  ): Pictures
}

type Mutation {
  updateProfile(
    data: UpdateProfileInput!
  ): User
}

input UpdateProfileInput {
  name: String
  bio: String
  website: String
  key: String
}

"""
用户
"""
type User implements BaseNode {
  "id"
  id: ID!

  "用户名"
  username: String

  "显示的名称"
  name: String

  fullName: String

  "邮箱"
  email: String

  "用户头像"
  avatar(size: Float): String

  "个人介绍"
  bio: String

  "个人网站"
  website: String

  "喜欢的picture数量"
  likes: Float

  "用户的picture数量"
  pictureCount: Float

  "是否私人"
  isPrivate: Boolean

  "是否有设置密码"
  isPassword: Boolean

  "是否验证邮箱"
  isEmailVerified: Boolean

  "注册方式"
  signupType: UserSignupType

  status: UserStatusType

  createTime: DateTime
  updateTime: DateTime

  pictures(limit: Float): [Picture]
}

